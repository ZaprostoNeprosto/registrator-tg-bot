import {Composer, Markup} from "telegraf";
import {checkAnswersKeyboard, editAnswersKeyboard, startKeyboard} from "../../functions/keyboards.js";
import {deleteMessages} from "../../functions/deleteMessages.js";
import {editMessageText} from "../../functions/editMessageText.js";
import {tryDeleteMessageAfterEditing} from "../../functions/tryDeleteMessageAfterEditing.js";
import {tryDeleteMessageIdFromArray} from "../../functions/tryDeleteMessageIdFromArray.js";

export const check = new Composer();
export async function checkCallback(ctx){
    if (ctx.message.text === "/exit" || ctx.message.text === "/menu") {
        await deleteMessages(ctx)
        ctx.session.msg = await ctx.reply('–ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?', startKeyboard);
        ctx.session.messageIds.push(ctx.session.msg.message_id)
        await ctx.scene.leave()
    } else {
        await tryDeleteMessageIdFromArray(ctx)
    }
}

export async function checkListCallback(ctx){
    ctx.answerCbQuery()
    await tryDeleteMessageAfterEditing(ctx)
    const option = ctx.match[1];
    ctx.wizard.state.data.practice = option;

    if (option === '–î–∞') {
        ctx.session.msg = await ctx.replyWithHTML(`–û–±—Ä–∞—â–∞–µ–º –í–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –≤ —Å–≤—è–∑–∏ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏, —Ä–∞–±–æ—Ç–∞ —Å –±–æ–ª–µ–µ —á–µ–º <u>–¥–≤—É–º—è –æ–±—Ä–∞–∑—Ü–∞–º–∏ –æ—Ç –æ–¥–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞</u> –º–æ–∂–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –Ω–∞ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∏–Ω–∂–µ–Ω–µ—Ä–∞.\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—Å–µ –ø—Ä–æ—à–ª–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≥–ª–∞–¥–∫–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ, <b>–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–±–æ–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, —á—Ç–æ–±—ã —Å–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏. –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–º–æ—á—å –í–∞–º –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã!`, Markup.inlineKeyboard([
            [Markup.button.callback('–ü–æ–Ω–∏–º–∞—é', 'ok')],
        ]));
        ctx.session.messageIds.push(ctx.session.msg.message_id)
        ctx.session.prevMsg = ctx.session.msg
        if (ctx.session.msgesIdFromEditingAnswers.length > 0) {
            ctx.session.msgesIdFromEditingAnswers.push(ctx.session.msg.message_id)
        }
    } else if (ctx.session.msgesIdFromEditingAnswers.length > 0) {
        await tryDeleteMessageAfterEditing(ctx)
        await editMessageText(ctx, editAnswersKeyboard)
        return ctx.wizard.selectStep(11)
    } else {
        await deleteMessages(ctx)
        ctx.session.msg = await ctx.replyWithHTML(`<b><u>–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã:</u></b>\n\n<b>–§–ò–û:</b> ${ctx.wizard.state.data.lastName} ${ctx.wizard.state.data.firstName} ${ctx.wizard.state.data.middleName}\n<b>–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ:</b> ${ctx.wizard.state.data.company}\n<b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b> ${ctx.wizard.state.data.position}\n<b>–ê–¥—Ä–µ—Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è:</b> ${ctx.wizard.state.data.adress}\n<b>–î–∞—Ç—ã –ø–æ—Å–µ—â–µ–Ω–∏—è:</b> ${ctx.wizard.state.data.daysText} –º–∞—è\n<b>–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å:</b> ${ctx.wizard.state.data.practice}\n<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${ctx.wizard.state.data.phone}\n<b>Email:</b> ${ctx.wizard.state.data.email}`, Markup.inlineKeyboard([
            [Markup.button.callback('–í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é  ‚úÖ', '/allIsOk')],
            [Markup.button.callback('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å  ‚úèÔ∏è', 'edit')],
            [Markup.button.callback('–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É  üóë', '/exitAnketa')],
        ]));
        ctx.session.messageIds.push(ctx.session.msg.message_id)
        ctx.session.prevMsg = ctx.session.msg
        ctx.session.resultMessageId = ctx.session.msg.message_id

        return ctx.wizard.next()
    }
}

export async function checkFinalCallback(ctx){
    ctx.answerCbQuery()
    if (ctx.session.msgesIdFromEditingAnswers.length > 0) {
        await tryDeleteMessageAfterEditing(ctx)
        await editMessageText(ctx, editAnswersKeyboard)
        return ctx.wizard.selectStep(11)
    } else if (ctx.session.prevMsg) {
        try  {
            await deleteMessages(ctx)
        } catch (err) {
            if (err.code === 400 && err.description === 'Bad Request: message to delete not found') {
                console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ');
            } else {
                console.log(err);
            }
        }
    }
    ctx.session.msg = await ctx.replyWithHTML(`<b><u>–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã:</u></b>\n\n<b>–§–ò–û:</b> ${ctx.wizard.state.data.lastName} ${ctx.wizard.state.data.firstName} ${ctx.wizard.state.data.middleName}\n<b>–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ:</b> ${ctx.wizard.state.data.company}\n<b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b> ${ctx.wizard.state.data.position}\n<b>–ê–¥—Ä–µ—Å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è:</b> ${ctx.wizard.state.data.adress}\n<b>–î–∞—Ç—ã –ø–æ—Å–µ—â–µ–Ω–∏—è:</b> ${ctx.wizard.state.data.daysText} –º–∞—è\n<b>–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å:</b> ${ctx.wizard.state.data.practice}\n<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${ctx.wizard.state.data.phone}\n<b>Email:</b> ${ctx.wizard.state.data.email}`, checkAnswersKeyboard);
    ctx.session.messageIds.push(ctx.session.msg.message_id)
    ctx.session.prevMsg = ctx.session.msg
    ctx.session.resultMessageId = ctx.session.msg.message_id
    return ctx.wizard.next()
}
